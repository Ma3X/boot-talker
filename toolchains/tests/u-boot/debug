#!/bin/bash

# http://balau82.wordpress.com/2010/02/28/hello-world-for-bare-metal-arm-using-qemu/
#
#     qemu-system-arm -M versatilepb -m 128M -nographic -kernel test.bin
#
# The -M option specifies the emulated system. The program prints “Hello world!” in the terminal and runs indefinitely; 
# to exit QEMU, press “Ctrl + a” and then “x”.
# It is possible also to debug the program using the CodeSourcery version of gdb, 
# because QEMU implements a gdb connector using a TCP connection. 
# To do so, I run the emulator with the correct options as follows:

#qemu-system-arm -M versatilepb -m 128M -nographic -s -S -kernel ./u-boot-2014.04/u-boot.bin
qemu-system-arm -M versatilepb -m 128M -nographic -kernel ./u-boot-2014.04/u-boot.bin

# command freezes the system before executing any guest code, and waits for a connection on the TCP port 1234. 
# From another terminal, I run arm-none-eabi-gdb and enter the commands:
#
#     target remote localhost:1234
#     file test.elf
#
# connects to the QEMU system and loads the debugging symbols of the test program, 
# whose binary image is already loaded in the system memory. From there, 
# it is possible to run the program with the continue command, single-step the program and debug it in general. 
# The exit command in gdb closes both the debugger and the emulator.
